
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: metal3machinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Metal3MachineTemplate
    listKind: Metal3MachineTemplateList
    plural: metal3machinetemplates
    shortNames:
    - m3mt
    - m3machinetemplate
    - m3machinetemplates
    - metal3mt
    - metal3machinetemplate
    singular: metal3machinetemplate
  scope: Namespaced
  versions:
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: Metal3MachineTemplate is the Schema for the metal3machinetemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3MachineTemplateSpec defines the desired state of Metal3MachineTemplate
            properties:
              nodeReuse:
                default: false
                description: When set to True, CAPM3 Machine controller will pick
                  the same pool of BMHs' that were released during the upgrade operation.
                type: boolean
              template:
                description: Metal3MachineTemplateResource describes the data needed
                  to create a Metal3Machine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      automatedCleaningMode:
                        description: When set to disabled, automated cleaning of host
                          disks will be skipped during provisioning and deprovisioning.
                        enum:
                        - metadata
                        - disabled
                        type: string
                      dataTemplate:
                        description: MetadataTemplate is a reference to a Metal3DataTemplate
                          object containing a template of metadata to be rendered.
                          Metadata keys defined in the metadataTemplate take precedence
                          over keys defined in metadata field.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      hostSelector:
                        description: HostSelector specifies matching criteria for
                          labels on BareMetalHosts. This is used to limit the set
                          of BareMetalHost objects considered for claiming for a metal3machine.
                        properties:
                          matchExpressions:
                            description: Label match expressions that must be true
                              on a chosen BareMetalHost
                            items:
                              properties:
                                key:
                                  type: string
                                operator:
                                  description: Operator represents a key/field's relationship
                                    to value(s). See labels.Requirement and fields.Requirement
                                    for more details.
                                  type: string
                                values:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              - values
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: Key/value pairs of labels that must exist
                              on a chosen BareMetalHost
                            type: object
                        type: object
                      image:
                        description: Image is the image to be provisioned.
                        properties:
                          checksum:
                            description: Checksum is a md5sum value or a URL to retrieve
                              one. Not required for live-iso.
                            type: string
                          checksumType:
                            description: ChecksumType is the checksum algorithm for
                              the image. e.g md5, sha256, sha512
                            enum:
                            - md5
                            - sha256
                            - sha512
                            type: string
                          format:
                            description: DiskFormat contains the image disk format.
                            enum:
                            - raw
                            - qcow2
                            - vdi
                            - vmdk
                            - live-iso
                            type: string
                          url:
                            description: URL is a location of an image to deploy.
                            type: string
                        required:
                        - url
                        type: object
                      metaData:
                        description: MetaData is an object storing the reference to
                          the secret containing the Metadata given by the user.
                        properties:
                          name:
                            description: Name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: Namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                      networkData:
                        description: NetworkData is an object storing the reference
                          to the secret containing the network data given by the user.
                        properties:
                          name:
                            description: Name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: Namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                      providerID:
                        description: ProviderID will be the Metal3 machine in ProviderID
                          format (metal3://<bmh-uuid>)
                        type: string
                      userData:
                        description: UserData references the Secret that holds user
                          data needed by the bare metal operator. The Namespace is
                          optional; it will default to the metal3machine's namespace
                          if not specified.
                        properties:
                          name:
                            description: Name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: Namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                    required:
                    - image
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
  - additionalPrinterColumns:
    - description: Time duration since creation of Metal3MachineTemplate
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha5
    schema:
      openAPIV3Schema:
        description: Metal3MachineTemplate is the Schema for the metal3machinetemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3MachineTemplateSpec defines the desired state of Metal3MachineTemplate
            properties:
              nodeReuse:
                default: false
                description: When set to True, CAPM3 Machine controller will pick
                  the same pool of BMHs' that were released during the upgrade operation.
                type: boolean
              template:
                description: Metal3MachineTemplateResource describes the data needed
                  to create a Metal3Machine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      automatedCleaningMode:
                        description: When set to disabled, automated cleaning of host
                          disks will be skipped during provisioning and deprovisioning.
                        enum:
                        - metadata
                        - disabled
                        type: string
                      dataTemplate:
                        description: MetadataTemplate is a reference to a Metal3DataTemplate
                          object containing a template of metadata to be rendered.
                          Metadata keys defined in the metadataTemplate take precedence
                          over keys defined in metadata field.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      hostSelector:
                        description: HostSelector specifies matching criteria for
                          labels on BareMetalHosts. This is used to limit the set
                          of BareMetalHost objects considered for claiming for a metal3machine.
                        properties:
                          matchExpressions:
                            description: Label match expressions that must be true
                              on a chosen BareMetalHost
                            items:
                              properties:
                                key:
                                  type: string
                                operator:
                                  description: Operator represents a key/field's relationship
                                    to value(s). See labels.Requirement and fields.Requirement
                                    for more details.
                                  type: string
                                values:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              - values
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: Key/value pairs of labels that must exist
                              on a chosen BareMetalHost
                            type: object
                        type: object
                      image:
                        description: Image is the image to be provisioned.
                        properties:
                          checksum:
                            description: Checksum is a md5sum value or a URL to retrieve
                              one.
                            type: string
                          checksumType:
                            description: ChecksumType is the checksum algorithm for
                              the image. e.g md5, sha256, sha512
                            enum:
                            - md5
                            - sha256
                            - sha512
                            type: string
                          format:
                            description: DiskFormat contains the image disk format
                            enum:
                            - raw
                            - qcow2
                            - vdi
                            - vmdk
                            - live-iso
                            type: string
                          url:
                            description: URL is a location of an image to deploy.
                            type: string
                        required:
                        - checksum
                        - url
                        type: object
                      metaData:
                        description: MetaData is an object storing the reference to
                          the secret containing the Metadata given by the user.
                        properties:
                          name:
                            description: Name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: Namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                      networkData:
                        description: NetworkData is an object storing the reference
                          to the secret containing the network data given by the user.
                        properties:
                          name:
                            description: Name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: Namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                      providerID:
                        description: ProviderID will be the Metal3 machine in ProviderID
                          format (metal3://<bmh-uuid>)
                        type: string
                      userData:
                        description: UserData references the Secret that holds user
                          data needed by the bare metal operator. The Namespace is
                          optional; it will default to the metal3machine's namespace
                          if not specified.
                        properties:
                          name:
                            description: Name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: Namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                    required:
                    - image
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
